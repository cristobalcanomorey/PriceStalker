<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='aplicacion.modelo.dao.mappers.ProductosMapper'>

	<resultMap type='Producto' id='ProductosResult'>
		<id property='id' column='id' />
		<result property='nombre' column='nombre' />
		<result property='link' column='link' />
		<result property='precioObjetivo' column='precioObjetivo' />
		<result property='imgLink' column='imgLink' />
		<result property='coste' column='coste' />
		<result property='fecha' column='fecha' />
	</resultMap>
	
	<resultMap type='ProductoSinPrecio' id='ProductoSinPrecioResult'>
		<id property='id' column='id' />
		<result property='nombre' column='nombre' />
		<result property='link' column='link' />
		<result property='precioObjetivo' column='precioObjetivo' />
		<result property='imgLink' column='imgLink' />
	</resultMap>

	<select id='getProductosPorUserId' resultMap='ProductosResult'>
	SELECT contenido.id,producto.nombre,producto.link,contenido.precioObjetivo,producto.imgLink,o.coste,o.fecha
FROM lista,producto,contenido,`precio` o
	LEFT JOIN `precio` b
		ON o.idProducto = b.idProducto AND o.fecha &lt; b.fecha
WHERE lista.idUsuario = #{id} AND 
	lista.id = contenido.idLista AND
    producto.id = contenido.idProducto AND
    producto.id = o.idProducto AND
	b.fecha is NULL;
	</select>
	
	<select id="getProductoPorIdContenido" resultType="Producto">
	select contenido.id,producto.nombre,producto.link,contenido.precioObjetivo,producto.imgLink,o.coste,o.fecha
from producto,contenido, `precio` o
	LEFT JOIN `precio` b
		ON o.idProducto = b.idProducto AND o.fecha &lt; b.fecha
where producto.id = contenido.idProducto AND
producto.id = (select idProducto from contenido where id = #{idContenido}) AND
contenido.id = (select id from contenido where id = #{idContenido}) and
producto.id = o.idProducto AND
b.fecha IS NULL;
	</select>
	
	<select id="existeProducto" resultType="java.lang.Integer">
		select id from producto where link = #{enlace};
	</select>
	
	<select id="productosSinPrecioPorUserId" resultMap="ProductoSinPrecioResult">
	select contenido.id,producto.nombre,producto.link,contenido.precioObjetivo,producto.imgLink from producto,contenido
where producto.id = contenido.idProducto AND
producto.id not in (select precio.idProducto from precio) AND
contenido.idLista = (select lista.id from lista where lista.idUsuario = #{idUsuario});
	</select>
	
	<select id="getProductoAEliminar" resultMap="ProductoSinPrecioResult">
	select contenido.id,producto.nombre,producto.link,contenido.precioObjetivo,producto.imgLink from producto, contenido
where contenido.idProducto = producto.id AND
contenido.id = #{contenidoId};
	</select>
	
	<select id="getNombrePorIdContenido" resultType="String">
	select nombre from producto
where id = (select idProducto from contenido where id = #{contenidoId});
	</select>
	
	<select id="getNumeroDeProductosEnAlgunaLista" resultType="java.lang.Integer">
	select COUNT(*) from producto
where id in (select distinct idProducto from contenido order by idProducto);
	</select>
	
	<select id="getCaracteristicasDelProductoNumero" resultType="CaracteristicasDeProducto">
	select * from producto
where id in (select distinct idProducto from contenido order by idProducto)
limit #{i},1;
	</select>
	
	<update id="updateCaracteristicasDeProducto">
	UPDATE producto SET nombre = #{nombre}, imgLink = #{imgLink}
WHERE id = #{id};
	</update>
	
	<insert id='insertProducto' useGeneratedKeys='true' keyProperty='id'>
		INSERT INTO producto (nombre,link,imgLink)
		VALUES(#{nombre},#{enlace},#{imgLink})
	</insert>
	
	<delete id="eliminarProductoDeLaLista">
	delete from contenido
where idLista = (select id from lista where idUsuario = #{idUsuario}) AND
id = #{contenidoId};
	</delete>
				
</mapper>